cli_test.bin is the actual application binary file generated
Header.bin is added to cli_test.bin at the beginning for the bootloader to understand and load the application.
So, Header.bin + cli_test.bin = cli.bin which is programmed into QSPI flash or is used by any external host to load using the bootloader via I2C bus.
For simulating the hardware, header.bin is changed a bit to header_sim.bin which skips the flash loading into RAM as the RAM in simulation is already initialized with the app code. So Header_sim.bin + cli_test.bin = cli_sim.bin.

STM32
PB6     Master SCL
PB9     Master SDA

Nexsys
JC10    Slave SCL
JC9     Slave SDA    

Connect 2 grounds between STM and Nexsys


1. Program STM32. Start STM32. All 4 LEDs will rapidly blink. This indicates that the STM has not detected Arnold2 slave.
2. Load the bit file into the SD card. Insert the SD card and power on the Nexsys board. Press program button to program the bit file to FPGA.
3. Open a terminal window for UART1 of Arnold2. Once the Nexsys bit file is programmed and done bit is high, you can see bootloader message from Arnold2 UART1 on the terminal. 
4. The value of the bootsel switch should be indicating 0 and dots will be printing indicating that Arnold2 bootloader is waiting for an external host to connect to it over I2C.
5. Now, reset the STM32 board. The green LED will stay on and red LED will keep blinking indicating that the host is loading the application over I2C.
6. Once the application is loaded, the orange led will glow indicating the completion of loading the application code. The blue LED will keep blinking to indicate that STM32 is in a while (1) loop.
7. Arnold 2 should have loaded the application and this can be verified by connecting a termial to UART0 and checking if the command line is up. I2C BL JMP 1c000880 is printed on the terminal connected to UART1 of Arnold2.


Programming QSPI flash

launch spi_load.py in a terminal using 
python3 spi_load.py /dev/ttyUSB1

load the cli_test application on Arnold2.
Commands on Arnold2
qspi
init
program Default/cli.bin 0x0

Programming will start indicating the progress on Arnold2 UART terminal

To change the bootsel pin status:
Open the terminal connected to UART 1 of Arnold2. 
Load the bit file. 
Once the bit file is programmed, and running, check the status of bootsel print.
If boot sel status is to be changed, first set SW0 to low (south) and the set SW1 to high or low.
Then press reset button. Now the SW1 (bootsel) will be taken correctly.

When connecting JTAG interface to debug make sure that the SW0 switch is in high position (north) for the debugger to work.

For any change in SW0 or SW1 settings to be reflected, press reset button.

